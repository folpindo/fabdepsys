<?php

namespace Fabdepsys;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-21 at 16:00:30.
 */
class ProcessLoaderTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var ProcessLoader
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new ProcessLoader;
        $this->object->initValidatorLoader();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Fabdepsys\ProcessLoader::getValidator
     * @todo   Implement testGetValidator().
     */
    public function testGetValidator() {
        $this->object->setParams(array('process' => 'build'));
        $actual = $this->object->getValidator();
        $this->assertInstanceOf('Fabdepsys\Process\Validator\ValidatorAbstract', $actual);
        $this->object->setParams(array('process' => 'packaging'));
        $actual = $this->object->getValidator();
        $this->assertInstanceOf('Fabdepsys\Process\Validator\ValidatorAbstract', $actual);
        $this->object->setParams(array('process' => 'staging_deployment'));
        $actual = $this->object->getValidator();
        $this->assertInstanceOf('Fabdepsys\Process\Validator\ValidatorAbstract', $actual);
        $this->object->setParams(array('process' => 'production_deployment'));
        $actual = $this->object->getValidator();
        $this->assertInstanceOf('Fabdepsys\Process\Validator\ValidatorAbstract', $actual);
    }

    public function testIsInputValid() {
        
        $params = $params = array(
            'process' => 'build',
            'project_id' => 'val1',
            'remote_address' => 'val1',
            'status' => 'val1',
            'details' => array(
                'url' => 'val1',
                'repository' => 'val1',
                'jenkins_project' => 'val1',
                'jenkins_jobname' => 'val1',
                'jenkins_token' => 'val1'
            )
        );
        
        // Test for loading process validator for build process.
        $this->object->setParams($params);
        $actual = $this->object->getValidator();
        $this->assertTrue($this->object->isInputValid());
        
        // Test for loading process validator for packaging process.
        $params['process'] = 'packaging';
        $this->object->setParams($params);
        $actual = $this->object->getValidator();
        $this->assertTrue($this->object->isInputValid());
        
        // Test for loading process validator for staging deployment process.
        $params['process'] = 'staging_deployment';
        $this->object->setParams($params);
        $actual = $this->object->getValidator();
        $this->assertTrue($this->object->isInputValid());
        
        // Test for loading process validator for production deployment process.
        $params['process'] = 'production_deployment';
        $this->object->setParams($params);
        $actual = $this->object->getValidator();
        $this->assertTrue($this->object->isInputValid());
    }

    public function testGetProcess() {
        
        $params = $params = array(
            'process' => 'build',
            'project_id' => 'val1',
            'remote_address' => 'val1',
            'status' => 'val1',
            'details' => array(
                'url' => 'val1',
                'repository' => 'val1',
                'jenkins_project' => 'val1',
                'jenkins_jobname' => 'val1',
                'jenkins_token' => 'val1'
            )
        );
        
        // Test for loading the build process.
        $this->object->setParams($params);
        $actual = $this->object->getValidator();
        $actual = $this->object->getProcess();
        $this->assertInstanceOf('Fabdepsys\Process\ProcessAbstract', $actual);
        
        // Test for loading the packaging process.
        $params['process'] = 'packaging';
        $this->object->setParams($params);
        $actual = $this->object->getValidator();
        $actual = $this->object->getProcess();
        $this->assertInstanceOf('Fabdepsys\Process\ProcessAbstract', $actual);
        
        // Test for loading the staging deployment process.
        $params['process'] = 'staging_deployment';
        $this->object->setParams($params);
        $actual = $this->object->getValidator();
        $actual = $this->object->getProcess();
        $this->assertInstanceOf('Fabdepsys\Process\ProcessAbstract', $actual);
        
        // Test for loading the production deployment process.
        $params['process'] = 'production_deployment';
        $this->object->setParams($params);
        $actual = $this->object->getValidator();
        $actual = $this->object->getProcess();
        $this->assertInstanceOf('Fabdepsys\Process\ProcessAbstract', $actual);
    }

}
